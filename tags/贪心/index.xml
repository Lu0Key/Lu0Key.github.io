<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>贪心 on 洛七的摸鱼池塘</title>
    <link>https://Lu0key.github.io/tags/%E8%B4%AA%E5%BF%83/</link>
    <description>Recent content in 贪心 on 洛七的摸鱼池塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Feb 2024 21:57:09 +0800</lastBuildDate><atom:link href="https://Lu0key.github.io/tags/%E8%B4%AA%E5%BF%83/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode LCP30 魔塔游戏</title>
      <link>https://Lu0key.github.io/post/lc-lcp30-%E9%AD%94%E5%A1%94%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Wed, 28 Feb 2024 21:57:09 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/lc-lcp30-%E9%AD%94%E5%A1%94%E6%B8%B8%E6%88%8F/</guid>
      <description>LCP30.魔塔游戏 小扣当前位于魔塔游戏第一层，共有 N 个房间，编号为 0 ~ N-1。每个房间的补血道具/怪物对于血量影响记于数组 nums，其中正数表示道具补血数值，即血量增加对应数值；负数表示怪物造成伤害值，即血量减少对应数值；0 表示房间对血量无影响。
小扣初始血量为 1，且无上限。假定小扣原计划按房间编号升序访问所有房间补血/打怪，为保证血量始终为正值，小扣需对房间访问顺序进行调整，每次仅能将一个怪物房间（负数的房间）调整至访问顺序末尾。请返回小扣最少需要调整几次，才能顺利访问所有房间。若调整顺序也无法访问完全部房间，请返回 -1。
示例 1:
输入: nums = [100,100,100,-250,-60,-140,-50,-50,100,150]
输出: 1
解释: 初始血量为 1。至少需要将 nums[3] 调整至访问顺序末尾以满足要求.
示例 2:
输入: nums = [-200,-300,400,0]
输出: -1
解释: 调整访问顺序也无法完成全部房间的访问。
提示：
 1 &amp;lt;= nums.length &amp;lt;= 10^5 -10^5 &amp;lt;= nums[i] &amp;lt;= 10^5  Related Topics
 贪心 数组 堆(优先队列)  题目链接: link
解答 本题的难度是 Medium.
这里的话我们可以考虑贪心算法, 从左到右遍历, 如果当前的血量小于 0 我们才考虑调整. 那这边我们当然是希望如果能够调整当然是能调整次数越少越好, 因此肯定选择把前面扣血最多的负数移到最后面, 因此其实我们相当于是需要维护一个最小堆, 因为只有负值才会放到堆里. 这样我们就可以每次取出堆顶的元素, 然后把血量加上这个值, 然后再把这个值放到最后面.</description>
    </item>
    
    <item>
      <title>Leetcode 670 最大交换</title>
      <link>https://Lu0key.github.io/post/lc-670-maximum-swap/</link>
      <pubDate>Mon, 22 Jan 2024 23:27:38 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/lc-670-maximum-swap/</guid>
      <description>670.最大交换 给定一个非负整数，你至多可以交换一次数字中的任意两位。返回你能得到的最大值。
示例 1:
输入: 2736
输出: 7236
解释: 交换数字2和数字7。
示例 2:
输入: 9973
输出: 9973
解释: 不需要交换。
注意:
 给定数字的范围是 [0, 10^8]  Related Topics
 贪心 数学  题目链接: link
解答 本题的难度是 Medium.
首先很自然的想法，当然是越高位的被换成越大越好, 因此我们从左到右遍历, 对于每一位来看, 这一位的右边有没有更大的, 如果有就把右边最大的和当前位进行换, 如果没有, 说明当前遍历过的数字已经是最大的了, 就要看看后面的了. 当然右边同时有两个是最大的, 那么当然是选位更小的那个数字, 因此从右向左遍历.
比如: 96177, 9 的右边没有比 9 更大的了, 因此跳到 6, 右边最大的为 7, 因此我们要找最大的应该用最低位, 即个位的 7. 得到结果, 97176。
代码如下:
class Solution { public int maximumSwap(int num) { String s = Integer.</description>
    </item>
    
  </channel>
</rss>
