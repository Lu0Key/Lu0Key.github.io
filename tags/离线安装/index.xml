<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>离线安装 on 洛七的摸鱼池塘</title>
    <link>https://Lu0key.github.io/tags/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/</link>
    <description>Recent content in 离线安装 on 洛七的摸鱼池塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 May 2024 14:36:01 +0800</lastBuildDate><atom:link href="https://Lu0key.github.io/tags/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>离线安装 JDK</title>
      <link>https://Lu0key.github.io/post/offline-installation-java/</link>
      <pubDate>Fri, 03 May 2024 14:36:01 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/offline-installation-java/</guid>
      <description>环境 Ubuntu 22.04, 可以在这里 https://docs.aws.amazon.com/corretto/latest/corretto-17-ug/downloads-list.html 下载最新版本的 JDK, 但是为了环境的稳定，我们需要一个固定的版本, 一个固定的下载源. 可以在这里找到所有版本 https://github.com/corretto/corretto-17/releases
这里使用的版本是 openjdk 的 17.0.8.8.1
本地文件在 /home/xxx/environments/amazon-corretto-17.0.8.8.1-linux-x64.tar.gz
tar -xzvf /home/xxx/environments/amazon-corretto-17.0.8.8.1-linux-x64.tar.gz 解压文件, 并在 ~/.bashrc 的里面增加两行
# 这里看你真实的路径 export JAVA_HOME=/home/xxx/environments/amazon-corretto-17.0.8.8.1-linux-x64 export PATH=$JAVA_HOME/bin:$PATH # 保存文件, 然后执行 source ~/.bashrc # 这时候就应该就能正常用了 java -version # openjdk version &amp;#34;17.0.8.1&amp;#34; 2023-08-22 LTS # OpenJDK Runtime Environment Corretto-17.0.8.8.1 (build 17.0.8.1+8-LTS) # OpenJDK 64-Bit Server VM Corretto-17.0.8.8.1 (build 17.0.8.1+8-LTS, mixed mode, sharing) </description>
    </item>
    
    <item>
      <title>离线安装 NodeJs</title>
      <link>https://Lu0key.github.io/post/offline-installation-nodejs/</link>
      <pubDate>Fri, 03 May 2024 10:35:17 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/offline-installation-nodejs/</guid>
      <description>这里的环境是 Ubuntu 22.04, 要装的 NodeJs 是 20.12.1, npm 10.5.0
首先到官网下载指定版本的 NodeJs 的安装包，然后上传到服务器上
进入到 网站https://nodejs.org/dist/ 找到对应的版本, 比如我要 20.12.1, 就 Ctrl + F 搜索 20.12.1, 然后找到对应的版本, 点进去, 我是 Linux x64的, 因此选择 node-v20.12.1-linux-x64.tar.gz 这个文件, 可以直接复制链接地址, 然后用 wget 命令下载
wget https://nodejs.org/dist/v20.12.1/node-v20.12.1-linux-x64.tar.gz sudo mkdir -p /opt/nodejs sudo tar -xvf node-v20.12.1-linux-x64.tar.gz -C /opt/nodejs/ 然后配置环境变量即可。
# 如果是临时使用 export PATH=$PATH:/opt/nodejs/node-v20.12.1-linux-x64/bin # 查看版本 node -v npm -v # 都对了就可以了 我希望所有用户都能用到这个 NodeJs, 因此需要配置环境变量
sudo vim /etc/environment # 修改 Path, 其实就是在原来的字符串上加上 :/opt/nodejs/node-v20.</description>
    </item>
    
    <item>
      <title>Mysql 离线安装</title>
      <link>https://Lu0key.github.io/post/offline-installation-mysql/</link>
      <pubDate>Mon, 04 Mar 2024 17:23:40 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/offline-installation-mysql/</guid>
      <description>因为需要 MySQL 离线安装, 所以记录一下
环境 Ubuntu 22.04
安装内容 MySQL 8.0
下载 需要下载三个文件, MySQL 的安装文件和两个依赖
MySQL 下载地址, 根据你的系统版本下载对应 DEB Bundle, 还需要 libaio1 和 libmecab2, 可以在这里下载
 DEB Bundle libaio1 libmecab2  DEB Bundle（也称为.deb Bundle）是一种软件分发格式，通常用于在基于Debian的Linux发行版中安装软件。它是一个包含了软件及其依赖关系的打包文件，可以方便地在目标系统上进行安装和管理.
安装 这里只是离线安装的方式, 真正离线的时候就拷进去就好了.
# 用 wget 把上面三个东西下下来 # 把 deb 包解压到当前文件夹下 # mysql-server_8.2.0-1ubuntu22.04_amd64.deb-bundle.tar 换成你具体的包 tar -xvf mysql-server_8.2.0-1ubuntu22.04_amd64.deb-bundle.tar -C ./ # 开始安装 # 下面都是无关版本的, 安装的时候就复制进去 tab 一下就行 # 1.  sudo dpkg -i mysql-common # 2.  sudo dpkg -i mysql-community-client-plugins # 3.</description>
    </item>
    
    <item>
      <title>Redis 离线安装</title>
      <link>https://Lu0key.github.io/post/offline-installation-redis/</link>
      <pubDate>Fri, 01 Mar 2024 15:53:03 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/offline-installation-redis/</guid>
      <description>下载 需要以下内容
 redis make build-essential pkg-config libdpkg-perl  安装 tar -zxvf redis-7.2.2.tar.gz cd redis-7.2.2 make test &amp;amp;&amp;amp; make # Command &amp;#39;make&amp;#39; not found, but can be installed with: # sudo apt install make # version 4.3-4.1build1, or # sudo apt install make-guile # version 4.3-4.1build1 # 因此需要为离线环境安装 make sudo apt-get download make # 这里能下下来 make 所需的 deb 包, 到时候迁移到离线环境 sudo dpkg -i make_4.3-4.1build1_amd64.deb # 然后再回到 redis 进行测试 sudo make test &amp;amp;&amp;amp; make # /bin/sh: 1: cc: not found # make[1]: *** [Makefile:436: adlist.</description>
    </item>
    
  </channel>
</rss>
