<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>动态规划 on 洛七的摸鱼池塘</title>
    <link>https://Lu0key.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
    <description>Recent content in 动态规划 on 洛七的摸鱼池塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 Jan 2024 00:07:08 +0800</lastBuildDate><atom:link href="https://Lu0key.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode 2809 使数组和小于等于 x 的最少时间</title>
      <link>https://Lu0key.github.io/post/lc-2809-minimum-time-to-make-array-sum-at-most-x/</link>
      <pubDate>Sat, 20 Jan 2024 00:07:08 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/lc-2809-minimum-time-to-make-array-sum-at-most-x/</guid>
      <description>2809.使数组和小于等于 x 的最少时间 给你两个长度相等下标从 0 开始的整数数组 nums1 和 nums2 。每一秒，对于所有下标 0 &amp;lt;= i &amp;lt; nums1.length ，nums1[i] 的值都增加 nums2[i] 。操作 完成后 ，你可以进行如下操作：
 选择任一满足 0 &amp;lt;= i &amp;lt; nums1.length 的下标 i ，并使 nums1[i] = 0 。  同时给你一个整数 x 。
请你返回使 nums1 中所有元素之和 小于等于 x 所需要的 最少 时间，如果无法实现，那么返回 -1 。
示例 1：
输入: nums1 = [1,2,3], nums2 = [1,2,3], x = 4
输出: 3
解释：
第 1 秒，我们对 i = 0 进行操作，得到 nums1 = [0,2+2,3+3] = [0,4,6] 。</description>
    </item>
    
    <item>
      <title>Leetcode 2171 拿出最少数目的魔法豆</title>
      <link>https://Lu0key.github.io/post/lc-2171-removing-minimum-number-of-magic-beans/</link>
      <pubDate>Thu, 18 Jan 2024 14:37:18 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/lc-2171-removing-minimum-number-of-magic-beans/</guid>
      <description>2171.拿出最少数目的魔法豆 给定一个 正整数 数组 beans ，其中每个整数表示一个袋子里装的魔法豆的数目。
请你从每个袋子中 拿出 一些豆子（也可以 不拿出），使得剩下的 非空 袋子中（即 至少还有一颗 魔法豆的袋子）魔法豆的数目 相等。一旦把魔法豆从袋子中取出，你不能再将它放到任何袋子中。
请返回你需要拿出魔法豆的 最少数目。
示例 1：
输入：beans = [4,1,6,5]
输出：4
解释：
 我们从有 1 个魔法豆的袋子中拿出 1 颗魔法豆。 剩下袋子中魔法豆的数目为：[4,0,6,5] 然后我们从有 6 个魔法豆的袋子中拿出 2 个魔法豆。 剩下袋子中魔法豆的数目为：[4,0,4,5] 然后我们从有 5 个魔法豆的袋子中拿出 1 个魔法豆。 剩下袋子中魔法豆的数目为：[4,0,4,4] 总共拿出了 1 + 2 + 1 = 4 个魔法豆，剩下非空袋子中魔法豆的数目相等。 没有比取出 4 个魔法豆更少的方案。  示例 2：
输入：beans = [2,10,3,2]
输出：7
解释：
 我们从有 2 个魔法豆的其中一个袋子中拿出 2 个魔法豆。 剩下袋子中魔法豆的数目为：[0,10,3,2] 然后我们从另一个有 2 个魔法豆的袋子中拿出 2 个魔法豆。 剩下袋子中魔法豆的数目为：[0,10,3,0] 然后我们从有 3 个魔法豆的袋子中拿出 3 个魔法豆。 剩下袋子中魔法豆的数目为：[0,10,0,0] 总共拿出了 2 + 2 + 3 = 7 个魔法豆，剩下非空袋子中魔法豆的数目相等。 没有比取出 7 个魔法豆更少的方案。  提示:</description>
    </item>
    
    <item>
      <title>Leetcode 2719 統計整數數目</title>
      <link>https://Lu0key.github.io/post/lc-2719-count-of-integers/</link>
      <pubDate>Tue, 16 Jan 2024 17:51:29 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/lc-2719-count-of-integers/</guid>
      <description>2719.統計整數數目 給你兩個數字字符串 num1 和 num2，以及兩個整數 max_sum 和 min_sum. 如果一個整數滿足一下條件，我們稱它是一個好整數：
 num1 &amp;lt;= x &amp;lt;= num2 min_sum &amp;lt;= digit_sum(x) &amp;lt;= max_sum  請你返回好整數的數目。答案可能很大，請返回答案對 10^9+7 取餘后的結果。
注意，digit_sum(x) 表示 x 各位數字之和。
示例 1：
输入：num1 = &amp;ldquo;1&amp;rdquo;, num2 = &amp;ldquo;12&amp;rdquo;, min_num = 1, max_num = 8
输出：11
解释：总共有 11 个整数的数位和在 1 到 8 之间，分别是 1,2,3,4,5,6,7,8,10,11 和 12 。所以我们返回 11 。
示例 2：
输入：num1 = &amp;ldquo;1&amp;rdquo;, num2 = &amp;ldquo;5&amp;rdquo;, min_num = 1, max_num = 5</description>
    </item>
    
  </channel>
</rss>
