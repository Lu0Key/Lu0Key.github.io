<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>matlab on 洛七的摸鱼池塘</title>
    <link>https://Lu0key.github.io/tags/matlab/</link>
    <description>Recent content in matlab on 洛七的摸鱼池塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 May 2021 09:30:22 +0800</lastBuildDate><atom:link href="https://Lu0key.github.io/tags/matlab/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>科学计算 4-7</title>
      <link>https://Lu0key.github.io/post/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-4-7/</link>
      <pubDate>Tue, 11 May 2021 09:30:22 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-4-7/</guid>
      <description>4.7 画出过结点 (0,3),(1,1),(2,4),(3,1),(4,2),(5,0) 的三次样条的图像。边条件为：
两端点的二阶导数(特别包括取0值的自然样条) hold on; x0 = [0,1,2,3,4,5]; y0 = [3,1,4,1,2,0]; plot(x0,y0,&amp;#39;o&amp;#39;); % 两端点的二阶导数值 secDerLeft = 0; secDerRight= 0; % 直接用 csape 函数 % cs0 = csape(x0,y0,&amp;#39;variational&amp;#39;); % yy = ppval(cs0,linspace(0,5,100)); % plot(linspace(0,5,100),yy,&amp;#39;r--&amp;#39;); % [2,2] 表示两个都是二阶导的值 cs = csape(x0,[secDerLeft,y0,secDerRight],[2,2]); xxt = linspace(-1,6,100); yyt=ppval(cs,xxt); plot(xxt,yyt,&amp;#39;r--&amp;#39;); hold off; % 改好了 % 默认h_i 恒等于 1 hold on; x0 = [0,1,2,3,4,5]; y0 = [3,1,4,1,2,0]; plot(x0,y0,&amp;#39;o&amp;#39;); b = zeros(length(x0),1); A = zeros(length(x0)); for i=2:length(x0)-1 b(i) = 6.</description>
    </item>
    
    <item>
      <title>科学计算 3-24</title>
      <link>https://Lu0key.github.io/post/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-3-24/</link>
      <pubDate>Tue, 11 May 2021 08:57:54 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-3-24/</guid>
      <description>3.24 (分段)线性插值基函数的表示
不妨认为直接整数为插值接点
% 可以画图多次(以叠加的方式) hold on; % 这个代码默认结点间隔为 1，只需要改下面这一行代码即可 xNode = linspace(0,5,6); for i=1:length(xNode) if length(xNode)&amp;lt;2 break; end r = rand(); g = rand(); b = rand(); if i == 1 x = linspace(0,xNode(2),100); y = (x-xNode(2))./(xNode(1)-xNode(2)); plot(x,y,&amp;#39;Color&amp;#39;,[r,g,b]); elseif i == length(xNode) x = linspace(xNode(i-1),xNode(i),100); y = (x-xNode(i-1))./(xNode(i)-xNode(i-1)); plot(x,y,&amp;#39;Color&amp;#39;,[r,g,b]); else x = linspace(xNode(i-1),xNode(i),100); y = (x-xNode(i-1))./(xNode(i)-xNode(i-1)); plot(x,y,&amp;#39;Color&amp;#39;,[r,g,b]); x = linspace(xNode(i),xNode(i+1),100); y = (x-xNode(i+1))./(xNode(i)-xNode(i+1)); plot(x,y,&amp;#39;Color&amp;#39;,[r,g,b]); end end (分段)二次插值基函数的表示
hold on; xNode = linspace(0,2,3); for i=1:length(xNode) if length(xNode)&amp;lt;2 break; end r = rand();g = rand();b = rand(); if i == 1 x = linspace(xNode(1),xNode(2),100); mid1 = (xNode(1)+xNode(2)).</description>
    </item>
    
    <item>
      <title>科学计算 3-10</title>
      <link>https://Lu0key.github.io/post/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-3-10/</link>
      <pubDate>Tue, 11 May 2021 08:50:14 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/%E7%A7%91%E5%AD%A6%E8%AE%A1%E7%AE%97-3-10/</guid>
      <description>3.10 科学计算引论-实验
分析计算 $\left(\dfrac{\sqrt{2}-1}{\sqrt{2}+1}\right)^3$ 的几种算式的误差。
((sqrt(2)-1)./(sqrt(2)+1))^3 % 0.005050633883347 第一种方法
$x=(\sqrt{2}-1)^6$ digits(6) % 设置有效位为6位 vpa(sqrt(2)-1) % 0.414214 vpa(0.414214.^6) % 0.00505067 abs(((sqrt(2)-1)./(sqrt(2)+1))^3-0.00505067) % 绝对误差为 3.611665341102244e-08 第二种方法
$x=99-70\sqrt{2}$ digits(6) vpa(sqrt(2)) % 1.414214 vpa(99-70.*sqrt(2)) % 0.00505063 abs(((sqrt(2)-1)./(sqrt(2)+1))^3-0.00505063) % 绝对误差为 3.883346588740011e-09 第三种方法
$x=\left(\dfrac{1}{\sqrt{2}+1}\right)^6$ digits(6) vpa(sqrt(2)) % 2.41421 vpa(1./2.41421) % 0.414214 vpa(0.414214.^6) % 0.00505067 abs(((sqrt(2)-1)./(sqrt(2)+1))^3-0.00505067) % 绝对误差为 3.611665341102244e-08 第四种方法
$x=\dfrac{1}{99+70\sqrt{2}}$ digits(6) vpa(sqrt(2)) % 1.414214 vpa(99+70.*sqrt(2)) % 197.995 vpa(1./197.995) % 0.00505063 abs(((sqrt(2)-1)./(sqrt(2)+1))^3-0.00505063) % 绝对误差为 3.883346588740011e-09 由此看出第二、四种算式误差较小，第一、三种算式舍入运算次数较多，因此误差较大
【科学计算 3-24】</description>
    </item>
    
  </channel>
</rss>
