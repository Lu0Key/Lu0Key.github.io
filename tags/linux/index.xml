<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 洛七的摸鱼池塘</title>
    <link>https://Lu0key.github.io/tags/linux/</link>
    <description>Recent content in Linux on 洛七的摸鱼池塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 31 Jul 2023 23:31:10 +0800</lastBuildDate><atom:link href="https://Lu0key.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Linux 更新显卡驱动</title>
      <link>https://Lu0key.github.io/post/linux-%E6%9B%B4%E6%96%B0%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/</link>
      <pubDate>Mon, 31 Jul 2023 23:31:10 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/linux-%E6%9B%B4%E6%96%B0%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/</guid>
      <description>最近经常更新老机器上的显卡驱动, 记录一下.
更新显卡驱动 更新CUDA 更新 Cudnn 更新显卡驱动 先去官网下载最新的显卡驱动, 放到服务器上, 然后执行
sudo chmod u+x ./NNVIDIA-Linux-x86_64-535.86.05.run sudo ./NVIDIA-Linux-x86_64-535.86.05.run 然后一路安装即可, 可能会遇到 X Server 没关闭的错误, 那就执行下面的命令即可.(我是Ubuntu)
sudo service lightdm stop # or sudo systemctl stop gdm 然后重新执行即可.
如果遇到提示
ERROR: The Nouveau kernel driver is currently in use by your system. 那么执行下面命令
sudo vim /etc/default/grub # 然后修改成下面这样 # GRUB_CMDLINE_LINUX_DEFAULT=&amp;#34;quiet splash nouveau.modeset=0&amp;#34; # 修改完后保存退出, 更新 sudo update-grub # 重启 sudo reboot ERROR: Unable to find the development tool `cc` in your path; please make sure that you have the package &amp;#39;gcc&amp;#39; installed.</description>
    </item>
    
    <item>
      <title>Linux 新增硬盘</title>
      <link>https://Lu0key.github.io/post/linux-%E6%96%B0%E5%A2%9E%E7%A1%AC%E7%9B%98/</link>
      <pubDate>Mon, 31 Jul 2023 15:03:39 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/linux-%E6%96%B0%E5%A2%9E%E7%A1%AC%E7%9B%98/</guid>
      <description>我们有时候Linux 服务器只有一个硬盘, 但是不是 LVM 格式的, 没办法直接扩容, 又不够用了, 因此我们选择 新创建一个 /home2 文件夹, 然后把硬盘挂载到 /home2 上, 想要方便直接用的话, 我就直接在 /home2 下给每一个人新创建一个同样的文件夹
# 需要管理员来搞 # 比如这个用户叫xxx sudo mkdir /home2/xxx sudo chmod 755 /home2/xxx sudo chown xxx:xxx /home2/xxx 然后 xxx 就可以在这个新的文件夹里直接用了.</description>
    </item>
    
    <item>
      <title>Linux 文本文件忙</title>
      <link>https://Lu0key.github.io/post/linux-%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E5%BF%99/</link>
      <pubDate>Mon, 31 Jul 2023 13:16:20 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/linux-%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E5%BF%99/</guid>
      <description>使用 MobaXterm 远程连接服务器的时候, 有时候会手动创建脚本在 windows 上写好了, 然后再直接用 MobaXterm 打开文件复制进去, 然后修改 shell 脚本的权限后去运行脚本. 有时候会出现错误
-bash: ./xxx.sh: 文本文件忙 这是因为 windows 和 Linux 的换行符不一样导致的, 解决方法是使用 dos2unix 命令
dos2unix xxx.sh 然后重新运行即可.</description>
    </item>
    
    <item>
      <title>Linux gpu fan control</title>
      <link>https://Lu0key.github.io/post/linux-gpu-fan-control/</link>
      <pubDate>Wed, 26 Jul 2023 00:58:32 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/linux-gpu-fan-control/</guid>
      <description>用于 Linux 服务器风扇控制, 经常觉得服务器显卡的风扇调度太保守了, 没事就想摸摸看, 然后核心温度才50度, 摸上去都有70多度了, 因此想要自己控制显卡的风扇转速, 狠狠地转！ 有时候核心都快70度了, 风扇转速才70%。
#!/bin/bash gpu_index_str=$(nvidia-smi --query-gpu=index --format=csv,noheader) gpu_index=($gpu_index_str) for index in ${!gpu_index[*]} do nvidia-settings -a &amp;#34;[gpu:$index]/GPUFanControlState=1&amp;#34; done old_speed=-1 # fan_nums nvidia-settings -q all | grep fan last_fan_index=$( nvidia-settings -q all | grep fan | grep -oP &amp;#34;\[fan:(\d+)\]:&amp;#34; | grep -oP &amp;#34;\d+&amp;#34; | sort -rn | head -n 1) echo $last_fan_index fan_nums=$((last_fan_index+1)) echo &amp;#34;fan count&amp;#34; echo $fan_nums while true do temperature_str=$(nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader) temperature=($temperature_str) if [ $((temperature[0])) -lt 40 ]; then echo &amp;#34;temperature &amp;lt; 40&amp;#34; fan_speed=60 elif [ $((temperature[0])) -lt 60 ]; then echo &amp;#34;40 &amp;lt; temperature &amp;lt; 60&amp;#34; fan_speed=90 else echo &amp;#34;temperature &amp;gt; 60&amp;#34; fan_speed=100 fi if [ $((old_speed)) -ne $((fan_speed)) ]; then for ((index=0;index&amp;lt;fan_nums;index++)) do old_speed=$fan_speed # echo &amp;#34;fan speed flush to $fan_speed&amp;#34; nvidia-settings -a &amp;#34;[fan:$((index))]/GPUTargetFanSpeed=$((fan_speed))&amp;#34; # echo &amp;#39;nvidia-settings -c:$index -a &amp;#34;[fan:$((index))]/GPUTargetFanSpeed=$((fan_speed))&amp;#34;&amp;#39; done fi sleep 300 done 缺陷:</description>
    </item>
    
    <item>
      <title>Linux 创建新用户</title>
      <link>https://Lu0key.github.io/post/linux-%E5%88%9B%E5%BB%BA%E6%96%B0%E7%94%A8%E6%88%B7/</link>
      <pubDate>Fri, 21 Jul 2023 18:27:05 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/linux-%E5%88%9B%E5%BB%BA%E6%96%B0%E7%94%A8%E6%88%B7/</guid>
      <description>sudo adduser xxx # 指定主目录 # 例如 # sudo adduser xxx --home /new_home/xxx # 输入密码 sudo chmod 755 /home/xxx su xxx # 输入密码 ssh-keygen # 一路回车 cd ~/.ssh cat id_rsa.pub &amp;gt;&amp;gt; authorized_keys chmod 777 ~/.ssh chmod 777 ~/.ssh/id_rsa # 然后把 id_rsa 下载下来 chmod 600 ~/.ssh/id_rsa chmod 700 ~/.ssh chmod 600 ~/.ssh/authorized_keys 然后就可以根据 id_rsa 登录了.</description>
    </item>
    
  </channel>
</rss>
