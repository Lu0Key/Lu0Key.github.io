<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on 洛七的摸鱼池塘</title>
    <link>https://Lu0key.github.io/tags/java/</link>
    <description>Recent content in Java on 洛七的摸鱼池塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Jun 2021 23:21:49 +0800</lastBuildDate><atom:link href="https://Lu0key.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HashMap源码学习</title>
      <link>https://Lu0key.github.io/post/hashmap%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Sun, 13 Jun 2021 23:21:49 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/hashmap%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</guid>
      <description>HashMap 因为为了翻转课堂专门看了 HashMap 的源码，为了担心以后忘记，写一篇笔记记录下来，如果下面没有特指都是指 JDK 1.8 的源码，JDK 1.7 与 1.8 差别比较大
介绍 HashMap 的底层是 数组 + 链表 + 红黑树，用一张图就能表示的比较清楚
这张图有一个问题，不止要链表长度达到 8，还要数组长度达到 64
常量 // 版本 id，感觉一般没用 private static final long serialVersionUID = 362498820763181265L; // 默认初始化容量，为 16 // 之所以用 1 &amp;lt;&amp;lt; 4 应该是为了表示容量必须是 2 的幂次方 static final int DEFAULT_INITIAL_CAPACITY = 1 &amp;lt;&amp;lt; 4; // aka 16  // 最大容量为 2^30 // 最小为 2 static final int MAXIMUM_CAPACITY = 1 &amp;lt;&amp;lt; 30; // 默认负载因子为 0.</description>
    </item>
    
    <item>
      <title>Java 实现简易图片查看器</title>
      <link>https://Lu0key.github.io/post/imageviewer-code/</link>
      <pubDate>Sun, 18 Apr 2021 16:59:54 +0800</pubDate>
      
      <guid>https://Lu0key.github.io/post/imageviewer-code/</guid>
      <description>这个代码是直接用核心卷上的
import javax.swing.*; import java.awt.*; import java.io.File; public class ImageViewer { public static void main(String[] args) { EventQueue.invokeLater(()-&amp;gt;{ JFrame frame = new ImageViewerFrame(); frame.setTitle(&amp;#34;ImageViewer&amp;#34;); frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.setVisible(true); }); } } class ImageViewerFrame extends JFrame{ private JLabel label; private JFileChooser chooser; private static final int DEFAULT_WIDTH = 300; private static final int DEFAULT_HEIGHT = 400; public ImageViewerFrame(){ setSize(DEFAULT_WIDTH,DEFAULT_HEIGHT); // use a label to display the images  label = new JLabel(); add(label); // set up the file chooser  chooser = new JFileChooser(); chooser.</description>
    </item>
    
  </channel>
</rss>
